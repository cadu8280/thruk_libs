#!/usr/bin/perl

use warnings;
use strict;
use Getopt::Long;

use lib 'lib';
use BuildHelper;

BEGIN {
    for my $val (qw/PERL5LIB PERL_MB_OPT PERL_LOCAL_LIB_ROOT PERL_MM_OPT/) {
        undef $ENV{$val} if defined $ENV{$val};
    }
};

####################################
my $verbose = 0;
GetOptions ('v|verbose' => \$verbose);

#######################################################
# list of packages to lookup references
my @packages     = glob("../thruk/Makefile.PL");

my($deps,$files) = BuildHelper::get_all_deps(1);
my $orphaned     = BuildHelper::get_orphaned($deps, $files, $verbose);

# remove referenced modules
for my $p (@packages) {
    my $meta         = BuildHelper::get_meta($p);
    my $rem_deps   = BuildHelper::get_deps_from_meta($meta, 1);
    for my $rem_dep (keys %{$rem_deps}) {
        my $rdep = BuildHelper::module_to_file($rem_dep, $files, $rem_deps->{$rem_dep});
        if(!defined $rdep) {
            print "WARNING: ",$rem_dep, " does not resolve to a file\n";
        } else {
            delete $orphaned->{$rdep};
        }
    }
}

####################################
# print result
for my $file (keys %{$orphaned}) {
    print $file, " is orphaned and could probably removed\n";
}
